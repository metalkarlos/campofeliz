package com.web.pet.pojo.annotations;

import java.math.BigDecimal;

// Generated 29/01/2013 08:42:08 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Petordenserviciodetalle generated by hbm2java
 */
@Entity
@Table(name = "petordenserviciodetalle")
public class Petordenserviciodetalle implements java.io.Serializable, Cloneable {

	private static final long serialVersionUID = -1517731967653899671L;
	private PetordenserviciodetalleId id;
	private Setestado setestado;
	private Setusuario setusuario;
	private Petservicio petservicio;
	private Petordenservicio petordenservicio;
	private Date fecharegistro;
	private String iplog;
	private Date fechamodificacion;
	private Integer cantidad;
	private BigDecimal precio;

	public Petordenserviciodetalle() {
	}

	public Petordenserviciodetalle(PetordenserviciodetalleId id,
			Petordenservicio petordenservicio, Date fecharegistro) {
		this.id = id;
		this.petordenservicio = petordenservicio;
		this.fecharegistro = fecharegistro;
	}

	public Petordenserviciodetalle(PetordenserviciodetalleId id,
			Setestado setestado, Setusuario setusuario,
			Petservicio petservicio, Petordenservicio petordenservicio,
			Date fecharegistro, String iplog, Date fechamodificacion,
			Integer cantidad, BigDecimal precio) {
		this.id = id;
		this.setestado = setestado;
		this.setusuario = setusuario;
		this.petservicio = petservicio;
		this.petordenservicio = petordenservicio;
		this.fecharegistro = fecharegistro;
		this.iplog = iplog;
		this.fechamodificacion = fechamodificacion;
		this.cantidad = cantidad;
		this.precio = precio;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idordenservicio", column = @Column(name = "idordenservicio", nullable = false)),
			@AttributeOverride(name = "idanio", column = @Column(name = "idanio", nullable = false)),
			@AttributeOverride(name = "idordenserviciodetalle", column = @Column(name = "idordenserviciodetalle", nullable = false)) })
	public PetordenserviciodetalleId getId() {
		return this.id;
	}

	public void setId(PetordenserviciodetalleId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idestado")
	public Setestado getSetestado() {
		return this.setestado;
	}

	public void setSetestado(Setestado setestado) {
		this.setestado = setestado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Setusuario getSetusuario() {
		return this.setusuario;
	}

	public void setSetusuario(Setusuario setusuario) {
		this.setusuario = setusuario;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idservicio", nullable = false)
	public Petservicio getPetservicio() {
		return this.petservicio;
	}

	public void setPetservicio(Petservicio petservicio) {
		this.petservicio = petservicio;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumns({
			@JoinColumn(name = "idordenservicio", referencedColumnName = "idordenservicio", nullable = false, insertable = false, updatable = false),
			@JoinColumn(name = "idanio", referencedColumnName = "idanio", nullable = false, insertable = false, updatable = false) })
	public Petordenservicio getPetordenservicio() {
		return this.petordenservicio;
	}

	public void setPetordenservicio(Petordenservicio petordenservicio) {
		this.petordenservicio = petordenservicio;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", nullable = false, length = 19)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Column(name = "iplog", length = 20)
	public String getIplog() {
		return this.iplog;
	}

	public void setIplog(String iplog) {
		this.iplog = iplog;
	}
	
	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fechamodificacion",  length = 19)
	public Date getFechamodificacion() {
		return this.fechamodificacion;
	}

	public void setFechamodificacion(Date fechamodificacion) {
		this.fechamodificacion = fechamodificacion;
	}
	
	@Override
	protected Object clone() throws CloneNotSupportedException {
		Petordenserviciodetalle petordenserviciodetalle = (Petordenserviciodetalle)super.clone();
		return petordenserviciodetalle;
	}
	
	public Petordenserviciodetalle clonar() throws Exception {
		return (Petordenserviciodetalle)this.clone();
	}
	
	@Column(name = "cantidad")
	public Integer getCantidad() {
		return this.cantidad;
	}

	public void setCantidad(Integer cantidad) {
		this.cantidad = cantidad;
	}

	@Column(name = "precio", precision = 5)
	public BigDecimal getPrecio() {
		return this.precio;
	}

	public void setPrecio(BigDecimal precio) {
		this.precio = precio;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result
				+ ((fecharegistro == null) ? 0 : fecharegistro.hashCode());
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		result = prime * result + ((iplog == null) ? 0 : iplog.hashCode());
		result = prime
				* result
				+ ((petordenservicio == null) ? 0 : petordenservicio.getId().hashCode());
		result = prime * result
				+ ((petservicio == null) ? 0 : petservicio.getIdservicio());
		result = prime * result
				+ ((setestado == null) ? 0 : setestado.getIdestado());
		result = prime * result
				+ ((setusuario == null) ? 0 : setusuario.getIdusuario());
		result = prime * result + ((fechamodificacion == null) ? 0 : fechamodificacion.hashCode());
		result = prime * result + ((cantidad == null) ? 0 : cantidad.hashCode());
		result = prime * result + ((precio == null) ? 0 : precio.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Petordenserviciodetalle other = (Petordenserviciodetalle) obj;
		if (fecharegistro == null) {
			if (other.fecharegistro != null)
				return false;
		} else if (!fecharegistro.equals(other.fecharegistro))
			return false;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		if (iplog == null) {
			if (other.iplog != null)
				return false;
		} else if (!iplog.equals(other.iplog))
			return false;
		if (petordenservicio == null) {
			if (other.petordenservicio != null)
				return false;
		} else if (!petordenservicio.getId().equals(other.petordenservicio.getId()))
			return false;
		if (petservicio == null) {
			if (other.petservicio != null)
				return false;
		} else if (petservicio.getIdservicio() != other.petservicio.getIdservicio())
			return false;
		if (setestado == null) {
			if (other.setestado != null)
				return false;
		} else if (setestado.getIdestado() != other.setestado.getIdestado())
			return false;
		if (setusuario == null) {
			if (other.setusuario != null)
				return false;
		} else if (setusuario.getIdusuario() != other.setusuario.getIdusuario())
			return false;
		if (fechamodificacion == null) {
			if (other.fechamodificacion != null)
				return false;
		} else if (!fechamodificacion.equals(other.fechamodificacion))
			return false;
		if (cantidad == null) {
			if (other.cantidad != null)
				return false;
		} else if (!cantidad.equals(other.cantidad))
			return false;
		if (precio == null) {
			if (other.precio != null)
				return false;
		} else if (!precio.equals(other.precio))
			return false;
		return true;
	}
	
	

}
