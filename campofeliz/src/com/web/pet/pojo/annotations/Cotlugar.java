package com.web.pet.pojo.annotations;

// Generated 29/01/2013 08:42:08 PM by Hibernate Tools 3.4.0.CR1

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Cotlugar generated by hbm2java
 */
@Entity
@Table(name = "cotlugar")
public class Cotlugar implements java.io.Serializable, Cloneable {

	private static final long serialVersionUID = 2575663126792873637L;
	private int idlugar;
	private Setestado setestado;
	private Cottipolugar cottipolugar;
	private Setusuario setusuario;
	private String nombre;
	private String descripcion;
	private Date fecharegistro;
	private String iplog;
	//private Set<Petordenservicio> petordenservicios = new HashSet<Petordenservicio>(0);

	public Cotlugar() {
	}

	public Cotlugar(int idlugar, String nombre, Date fecharegistro) {
		this.idlugar = idlugar;
		this.nombre = nombre;
		this.fecharegistro = fecharegistro;
	}

	public Cotlugar(int idlugar, Setestado setestado, 
			Cottipolugar cottipolugar, Setusuario setusuario, String nombre, 
			String descripcion, Date fecharegistro, String iplog) {
		this.idlugar = idlugar;
		this.setestado = setestado;
		this.cottipolugar = cottipolugar;
		this.setusuario = setusuario;
		this.nombre = nombre;
		this.descripcion = descripcion;
		this.fecharegistro = fecharegistro;
		this.iplog = iplog;
		//this.petordenservicios = petordenservicios;
	}

	@Id
	@Column(name = "idlugar", unique = true, nullable = false)
	public int getIdlugar() {
		return this.idlugar;
	}

	public void setIdlugar(int idlugar) {
		this.idlugar = idlugar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idestado")
	public Setestado getSetestado() {
		return this.setestado;
	}

	public void setSetestado(Setestado setestado) {
		this.setestado = setestado;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idtipolugar")
	public Cottipolugar getCottipolugar() {
		return this.cottipolugar;
	}

	public void setCottipolugar(Cottipolugar cottipolugar) {
		this.cottipolugar = cottipolugar;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "idusuario")
	public Setusuario getSetusuario() {
		return this.setusuario;
	}

	public void setSetusuario(Setusuario setusuario) {
		this.setusuario = setusuario;
	}

	@Column(name = "nombre", nullable = false, length = 100)
	public String getNombre() {
		return this.nombre;
	}

	public void setNombre(String nombre) {
		this.nombre = nombre;
	}

	@Column(name = "descripcion", length = 200)
	public String getDescripcion() {
		return this.descripcion;
	}

	public void setDescripcion(String descripcion) {
		this.descripcion = descripcion;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "fecharegistro", nullable = false, length = 19)
	public Date getFecharegistro() {
		return this.fecharegistro;
	}

	public void setFecharegistro(Date fecharegistro) {
		this.fecharegistro = fecharegistro;
	}

	@Column(name = "iplog", length = 20)
	public String getIplog() {
		return this.iplog;
	}

	public void setIplog(String iplog) {
		this.iplog = iplog;
	}

	@Override
	protected Object clone() throws CloneNotSupportedException{
		Cotlugar cotlugar = (Cotlugar) super.clone();
		
		if(cotlugar.getCottipolugar() != null && cotlugar.getCottipolugar().getIdtipolugar() > 0){
			cotlugar.setCottipolugar((Cottipolugar)cotlugar.getCottipolugar().clone());
		}
		
		return cotlugar;
	}
	
	public Cotlugar clonar() throws Exception{
		return (Cotlugar)this.clone();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((cottipolugar == null) ? 0 : cottipolugar.getIdtipolugar());
		result = prime * result + ((descripcion == null) ? 0 : descripcion.hashCode());
		result = prime * result + ((fecharegistro == null) ? 0 : fecharegistro.hashCode());
		result = prime * result + idlugar;
		result = prime * result + ((iplog == null) ? 0 : iplog.hashCode());
		result = prime * result + ((nombre == null) ? 0 : nombre.hashCode());
		result = prime * result + ((setestado == null) ? 0 : setestado.getIdestado());
		result = prime * result + ((setusuario == null) ? 0 : setusuario.getIdusuario());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		Cotlugar other = (Cotlugar) obj;
		if (cottipolugar == null) {
			if (other.cottipolugar != null)
				return false;
		} else if (cottipolugar.getIdtipolugar() != other.cottipolugar.getIdtipolugar())
			return false;
		if (descripcion == null) {
			if (other.descripcion != null)
				return false;
		} else if (!descripcion.equals(other.descripcion))
			return false;
		if (fecharegistro == null) {
			if (other.fecharegistro != null)
				return false;
		} else if (!fecharegistro.equals(other.fecharegistro))
			return false;
		if (idlugar != other.idlugar)
			return false;
		if (iplog == null) {
			if (other.iplog != null)
				return false;
		} else if (!iplog.equals(other.iplog))
			return false;
		if (nombre == null) {
			if (other.nombre != null)
				return false;
		} else if (!nombre.equals(other.nombre))
			return false;
		if (setestado == null) {
			if (other.setestado != null)
				return false;
		} else if (setestado.getIdestado() != other.setestado.getIdestado())
			return false;
		if (setusuario == null) {
			if (other.setusuario != null)
				return false;
		} else if (setusuario.getIdusuario() != other.setusuario.getIdusuario())
			return false;
		return true;
	}

}
